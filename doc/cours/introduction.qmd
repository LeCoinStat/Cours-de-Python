---
title: "Introduction à Python : Bases et Structures Fondamentales"
description: "[Slides](introduction-slides.html)"
author: "Natacha Njongwa Yepnga"
format: 
  html:
    toc: true
    toc-location: left
    toc-depth: 3
    number-sections: true
    number-depth: 2
  revealjs:
    theme: moon
    footer: "[Home](../../index.html) --- [Introduction à Python](introduction.html)"
    slide-number: c/t                    # collapsed/total
    slide-level: 3
    controls: true
    output-file: introduction-slides.html
mermaid:
  theme: forest
code-line-numbers: true
from: markdown+emoji
---

# Introduction à Python

##  Introduction

Python est un langage de programmation polyvalent, apprécié pour sa simplicité et sa lisibilité. Il est utilisé dans des domaines variés comme le développement web, la data science, et l’intelligence artificielle.

---

### Qu’est-ce que Python?

- Python est un langage interprété, open source, et multiplateforme.
- Créé par **Guido van Rossum** en 1989 (première version en 1991).
- Points forts :
  - Syntaxe simple et lisible.
  - Large écosystème de bibliothèques.

---

###  Conseils pour l’apprentissage de Python

- **Pratique régulière** : Codez régulièrement pour solidifier vos bases.
- **Explorez des projets simples** : Calculatrice, jeu de devinettes, gestion d’inventaire.
- **Utilisez les ressources disponibles** :
  - Documentation officielle : [python.org/doc](https://www.python.org/doc/).
  - Plateformes d'exercices : [LeetCode](https://leetcode.com/), [Hackerrank](https://www.hackerrank.com/).

---

### Installer et configurer Python

#### **Installer Python**

- Téléchargez Python depuis [python.org](https://www.python.org/).  

### **Outils recommandés pour coder en Python**

##### **Visual Studio Code (VS Code)**  
- **Qu'est-ce que VS Code ?**  
  - Un éditeur de code léger, puissant et extensible, développé par Microsoft.  
  - Idéal pour écrire et exécuter des scripts Python grâce à ses extensions.  

- **Installer VS Code** :  
  - Téléchargez-le sur [code.visualstudio.com](https://code.visualstudio.com/).  
  - Installez l'extension **Python** via le **Visual Studio Code Marketplace** :
    1. Ouvrez VS Code.
    2. Allez dans l'onglet des extensions (icône avec des blocs).
    3. Recherchez **Python** et cliquez sur "Installer".


---

##### **Anaconda**
- **Qu'est-ce qu'Anaconda ?**  
  - Une distribution Python incluant Jupyter Notebook, des bibliothèques populaires (NumPy, Pandas, Matplotlib, etc.) et un gestionnaire d'environnements.  
  - Idéal pour la data science et le machine learning.  

- **Installer Anaconda** :  
  - Téléchargez-le depuis [anaconda.com](https://www.anaconda.com/products/distribution).  
  - Suivez les instructions pour votre système d'exploitation (Windows, macOS, Linux).  

- **Avantages** :  
  - Configuration simplifiée pour débuter.  
  - Gestion facile des environnements virtuels avec `conda`. 
---

##### **Jupyter Notebook**
- **Qu'est-ce que Jupyter Notebook ?**  
  - Un environnement interactif où vous pouvez écrire et exécuter du code Python dans des blocs (appelés "cellules").  
  - Idéal pour la data science et les visualisations.  

- **Installer Jupyter Notebook** :  
  - Si vous avez Anaconda, Jupyter est préinstallé.  
  - Sinon, installez-le avec `pip` :  
    ```bash
    pip install notebook
    ```

---

##### **Google Colab**
- **Qu'est-ce que Google Colab ?**  
  - Un environnement en ligne gratuit pour coder en Python, développé par Google.  
  - Aucun besoin d'installer Python ou Jupyter : tout fonctionne dans votre navigateur.  
  - Avantage : accès à des GPU gratuits pour le machine learning.

- **Accéder à Google Colab** :  
  1. Rendez-vous sur [colab.research.google.com](https://colab.research.google.com/).  
  2. Connectez-vous avec un compte Google.  
  3. Créez un nouveau notebook en cliquant sur **New Notebook**.

- **Fonctionnalités clés** :  
  - Sauvegarde automatique sur Google Drive.  
  - Support intégré des bibliothèques populaires (NumPy, Pandas, Matplotlib, etc.).  
---

## Premiers pas avec Python

Python est un langage polyvalent, lisible et largement utilisé. Cette section vous guide à travers les bases essentielles pour bien commencer avec Python.

### Déclaration de variables
Une variable est un conteneur permettant de stocker des données. En Python, il suffit de nommer la variable et d'y attribuer une valeur :

```python
x = 5
y = "Python"
print(x, y)
```
---
### Les Commentaires en Python

Dans un script Python, tout ce qui suit le caractère `#` est ignoré par l’interpréteur jusqu’à la fin de la ligne. Ces lignes sont appelées **commentaires** et sont destinées à expliquer le code dans un langage humain.

---

#### Pourquoi utiliser des commentaires ?

- **Clarifier le code** : Expliquez des portions complexes pour vous ou d'autres développeurs.
- **Documenter le fonctionnement** : Fournir des indications sur le rôle d'un morceau de code ou d'une fonction.
- **Faciliter la maintenance** : Les commentaires rendent votre code plus compréhensible à long terme.

Les commentaires ne sont pas exécutés par Python et n'affectent donc pas les performances du programme.

---

Pour ajouter un commentaire, commencez la ligne avec un `#`. Python ignorera tout ce qui suit ce caractère jusqu’à la fin de la ligne.

**Exemple simple** :
```python
# Ceci est un commentaire simple
print("Hello world!")  # Affiche un message à l'écran

# Déclaration de variables
nom = "Alice"  # Nom de l'utilisateur
age = 25       # Âge de l'utilisateur

# Affichage des informations
print(f"Nom : {nom}")
print(f"Âge : {age}")

# Cette partie affiche une salutation
print("Bonjour et bienvenue dans le cours de Python !")

```

#### Bonnes pratiques pour les commentaires

- Soyez concis et clair
Vos commentaires doivent aller à l’essentiel et être compréhensibles.

```python
# Calcule la somme des éléments de la liste
total = sum([1, 2, 3, 4])
```

- Évitez les commentaires inutiles

Ne commentez pas des choses évidentes que le code lui-même exprime clairement.

**Exemple inutile** :
```python
# Attribue la valeur 5 à la variable x
x = 5
```

- Mettez à jour vos commentaires

Assurez-vous que vos commentaires reflètent toujours le fonctionnement réel du code, surtout après des modifications.



#### Différents types de commentaires

- Commentaires sur une ligne

Ils s'écrivent avec `#` au début de la ligne.

```python
# Ce programme affiche un message
print("Bienvenue en Python !")
```

- Commentaires multilignes

Pour commenter plusieurs lignes, vous pouvez utiliser `#` au début de chaque ligne ou une chaîne de caractères triple (`"""` ou `'''`) si le commentaire est temporaire.

```python
# Début du programme
# Ce script montre un exemple
# avec des commentaires multilignes.
```
Ou avec une chaîne triple :

```python
"""
Ce script illustre :
- L'utilisation de variables
- L'utilisation des commentaires
"""
```

# Les variables en Python

## Qu'est-ce qu'une variable ?
Une **variable** est un conteneur permettant de stocker une valeur ou des données. En Python, une variable peut contenir différents types de données comme des nombres, du texte, ou des structures complexes.

---


## Déclaration d'une variable
En Python, il suffit d'utiliser un nom valide et de lui assigner une valeur avec le symbole `=`.

**Exemple** :
```python
# Déclaration de variables
nom = "Alice"   # Chaîne de caractères
age = 25        # Entier
pi = 3.14       # Nombre flottant
est_actif = True  # Booléen
```

##  Les Types de Base en Python

Python propose plusieurs types de données de base, essentiels pour la manipulation des informations.

---
### Comment connaître le type d'une variable en Python ?

Python propose une fonction intégrée appelée `type()` pour déterminer le type de données d'une variable.

---

#### Utilisation de `type()`

La fonction `type()` prend une variable en argument et retourne son type.

Exemples de types que vous pourriez rencontrer :
- `str` : Chaîne de caractères
- `int` : Entier
- `float` : Nombre décimal
- `bool` : Valeur logique

---